<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="DELETE">
        <category>sc</category>
        <client_script><![CDATA[function($scope, spAriaUtil, i18n, spModal) {

    var c = this;

    c.trackPage = function() {
        window.GlideWebAnalytics.trackEvent("Service Catalog", "Catalog My Requests", "My Requests Widget Loaded");
    }

    if (c.data.is_new_order)
        spAriaUtil.sendLiveMessage(c.data.requestSubmitMsg);

    c.viewFilter = 'open';
    c.filterOptions = [{key:'open',value:c.data.messages.openRequests},{key:'close',value:c.data.messages.closedRequests}];

    c.changeView = function() {
        window.GlideWebAnalytics.trackEvent("Service Catalog", "Catalog My Requests", "Open/Close Filter Toggled");
        c.server.get({
            action: "change_view",
            view: c.viewFilter,
            search_text: c.filterText
        }).then(function(response) {
            c.data = response.data;
            var resultMsg = (c.data.request.req_list.length == 1 ? 'result' : 'results') + ' returned';
            spAriaUtil.sendLiveMessage(i18n.getMessage('{0} ' + resultMsg).withValues([c.data.request.req_list.length]));
        });
    }

    c.search = function() {
        c.server.get({
            action: 'search',
            search_text: c.filterText,
            view: c.viewFilter
        }).then(function(response) {
            c.data = response.data;
            var resultMsg = (c.data.request.req_list.length == 1 ? 'result' : 'results') + ' returned';
            spAriaUtil.sendLiveMessage(i18n.getMessage('{0} ' + resultMsg).withValues([c.data.request.req_list.length]));
        });
    }

    c.checkEnter = function(event) {
        if (event.which === 13)
            c.search();
    }


    c.filterDraftItem = function(item) {
        if (!c.data.draftSearchText)
            return true; // If no searchText, return true to show all items

        var searchText = c.data.draftSearchText.toLowerCase();

        // Perform the filtering based on item.name or item.displayName
        return (
            (item.name && item.name.toLowerCase().includes(searchText)) ||
            (item.cart_item_name && item.cart_item_name.toLowerCase().includes(searchText))
        );
    };

    c.updateFilteredDraftItems = function() {
        if (!c.data.draftItems)
            return;

        if (!c.data.draftSearchText)
            c.filteredDraftItems = c.data.draftItems;
        else {
            c.filteredDraftItems = c.data.draftItems.filter(function(item) {
                return c.filterDraftItem(item)
            });
        }
    }

    c.filteredDraftItems = [];
    c.updateFilteredDraftItems();

    c.removeDraftItem = function(cartItem) {
        var options = {
            title: c.data.deleteDraftItemMsg,
            headerStyle: {
                border: 'none',
                'padding-bottom': 0
            },
            footerStyle: {
                border: 'none',
                'padding-top': 0
            },
            messageOnly: true,
            buttons: [{
                label: c.data.dialogCancel,
                primary: false
            }, {
                label: c.data.dialogDelete,
                'class': 'btn-danger',
                primary: true
            }],
        };

        spModal.open(options).then(function(actionButton) {
            if (actionButton) {
                if (!actionButton.primary)
                    return;

                c.fetchingDrafts = true;
                c.server.get({
                    action: "remove_item",
                    removeItemID: cartItem.sys_id,
                    prevLimit : c.data.draftItems && c.data.draftItems.length ? c.data.draftItems.length : 100,
                    attachmentTable: cartItem.attachment_table
                }).then(function(response) {
                    c.data.draftItems = response.data.draftItems;
                    c.data.hasMoreDrafts = response.data.hasMoreDrafts;
                    c.updateFilteredDraftItems();
                    c.fetchingDrafts = false;
                });
            }
        });
    }

    c.loadMore = function() {
        window.GlideWebAnalytics.trackEvent("Service Catalog", "Catalog My Requests", "Show More Clicked");
        var currentRequests = c.data.request.req_list.length;
        spAriaUtil.sendLiveMessage("${Loading more requests}");
        c.fetching = true;
        c.server.get({
            action: 'fetch_more',
            lastLimit: c.data.lastLimit,
            view: c.viewFilter,
            search_text: c.filterText
        }).then(function(response) {
            var addedRequests = response.data.request.req_list.length - currentRequests;
            var resultMsg = (addedRequests == 1 ? 'request' : 'requests') + ' added';
            spAriaUtil.sendLiveMessage(i18n.getMessage('{0} ' + resultMsg).withValues([addedRequests]));
            c.data = response.data;
            c.fetching = false;
        });
    }

    c.loadMoreDrafts = function() {
            c.fetchingDrafts = true;

            c.server.get({
                action : 'fetch_more_draft_items',
                prevLimit: c.data.draftItems && c.data.draftItems.length ? c.data.draftItems.length : 100,
            }).then(function(response){
                c.data.draftItems = response.data.draftItems;
                c.data.hasMoreDrafts = response.data.hasMoreDrafts;
                c.updateFilteredDraftItems();
                c.fetchingDrafts = false;
        });
    }

    c.changeSelectedTab = function(selectedTab) {
        c.data.isRequestsTabActive = selectedTab == "requests";
        c.data.isDraftsTabActive = selectedTab == "drafts";
    }
}]]></client_script>
        <controller_as>c</controller_as>
        <css>$sp-space--sm: 8px !default;
.panel-heading {
  position: relative;
  &gt; .fa-filter { 
    position: absolute;
    top: 1rem; 
    right: 1rem; 
  }
}
.draft-item-row {
  display: flex;
}

.draft-item-cell {
  display: flex;
  align-items: center;
}

.nav-tabs &gt; li &gt; a:focus,
.nav-tabs &gt; li.active &gt; a:hover,
.nav-tabs &gt; li.active &gt; a,
.nav-tabs &gt; li.active &gt; a:focus,
.nav-tabs &gt; li.active &gt; a:hover
{
  border-bottom: 3px solid $primary; /* Show border only at the bottom for the active tab */
 	color: $primary;
  font-weight: bold;
  border-top: none;
  border-left: none;
  border-right: none;
  box-shadow: none;
}

.nav-tabs {
  border-bottom: 1px solid $nav-tabs-justified-link-border-color; /* Show the bottom border for all tabs */
  border-radius: 3px 3px 0 0;
}

.panel {
  &gt; .list-group, &gt;.panel-collapse{
    	.list-group-item {
		  	border-width: 1px 0 0 0;
      }
  }
  .requests-header-container {
    margin: 0px;
    border: none;
    display: flex;
    flex-wrap: wrap;
    justify-content: flex-end;
    min-width: min-content;
    
    .fit-content {
      min-width: fit-content;
    }
  }
}

.uib-vis-tab &gt; a {
  color: $gray-dark;
}

.btn-show-more {
  margin-left: auto;
  margin-right: auto;
  display: flex;
}

.control-view {
  display: flex;
  align-items: baseline;
}

@media  (min-width: 768px) and (max-width: 991px) {
	.padding-left-large {
		padding-left: 45px !important;
	}
}

@media  (max-width: 991px) {
  .adjust-width {
	width: 100% !important;
  }
  .align-icon {
	padding: 6px $sp-space--sm;
  }
}

.column-headers {
  position: sticky;
  position: -webkit-sticky;
  top: 0;
  z-index: 1;
  box-shadow: 0px 1px 0px $panel-inner-border;
  font-weight: 700;
}

</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id/>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {
    init = function() {
        var isOpen = false;
        scope.$evalAsync(function() {
            element.on("select2-open", function() {
                isOpen = true;
                element.parent().find(".select2-focusser").attr("aria-expanded", isOpen);
            });
            element.on("select2-close", function() {
                isOpen = false;
                element.parent().find(".select2-focusser").attr("aria-expanded", isOpen);
            });
        });

        setTimeout(function() {
            var select2Focusser = element.parent().find(".select2-focusser");
            var select2Results = element.parent().find("ul.select2-results");
            select2Focusser.attr("aria-expanded", isOpen);
            select2Focusser.attr("aria-owns", select2Results.attr("id"));
            select2Results.attr("aria-labelledby", "label_view");
        }, 500);
    }
    init();
}]]></link>
        <name>Copy of My Requests</name>
        <option_schema>[{"name":"title","section":"Presentation","default_value":"My Requests","label":"Title","type":"string"},{"name":"show_view","section":"Behavior","default_value":"true","label":"Show View","type":"boolean"},{"hint":"Number of items per page","name":"items_per_page","section":"Behavior","default_value":"15","label":"Items per page","type":"integer"}]</option_schema>
        <public>false</public>
        <roles>snc_internal,snc_external</roles>
        <script><![CDATA[(function() {

    var localInput = input; //to safeguard pullution of "input" via BR or other scripts
    var itemsObj;
    if (localInput && localInput.action === "remove_item") {
        var cartRecord = new sn_sc.CartJS('draft_items');
        cartRecord.remove(localInput.removeItemID);
        itemsObj = getDraftItems(localInput.prevLimit);
        data.draftItems = itemsObj.items;
        data.hasMoreDrafts = itemsObj.hasMore;
        if (!gs.nil(localInput.attachmentTable))
          new global.GlobalServiceCatalogUtil().deleteAttachments(localInput.attachmentTable, localInput.removeItemID);

        return;
    }

    if (localInput && localInput.action == "fetch_more_draft_items") {
        itemsObj = getDraftItems(localInput.prevLimit + 100);
        data.draftItems = itemsObj.items;
        data.hasMoreDrafts = itemsObj.hasMore;
        return;
    }

    var alsoRequest = false;

    var msg = data.messages = {};
    msg.myRequestsTitle = options.title ? gs.getMessage(options.title) : gs.getMessage('My Requests');
    msg.openRequests = gs.getMessage('Open requests');
    msg.closedRequests = gs.getMessage('Closed requests');
    msg.showMoreRequests = gs.getMessage('Show More Requests');
    data.filterMsg = gs.getMessage("Search open requests");
    data.draftFilterMsg = gs.getMessage("Search draft items");
    data.draftItemsMsg = gs.getMessage("Draft Items");
    data.deleteDraftItemMsg = gs.getMessage("Are you sure you want to delete the draft item?");
    data.dialogCancel = gs.getMessage('Cancel');
    data.dialogDelete = gs.getMessage('Delete draft');
    data.draftSearchText = $sp.getParameter("draftSearchText");
    var selectDraftTab = $sp.getParameter('selectDraftTab');
    //localInput will be undefined only on the first load.
    if (gs.nil(localInput)) {
        data.isRequestsTabActive = !data.draftSearchText && !selectDraftTab;
        data.isDraftsTabActive = !!data.draftSearchText || selectDraftTab;
    } else {
        data.isRequestsTabActive = true;
        data.isDraftsTabActive = false;
    }
    if (gs.nil(data.draftSearchText))
        data.draftSearchText = "";
    else
        data.draftSearchText = decodeURIComponent(data.draftSearchText);

    data.hide_draft_tab = (gs.getProperty('glide.sc.disable.save_as_draft') == 'true') || (gs.getProperty('glide.sc.enable.save_as_draft.portal.' + $sp.getPortalRecord().getValue("url_suffix")) != 'true');

    var recordTable = options.record_table || $sp.getParameter("table");
    var recordId = options.record_id || $sp.getParameter("sys_id");

    data.is_associated_ticket_tab = options.is_associated_ticket_tab;

    if (localInput && localInput.view === 'open')
        data.filterMsg = gs.getMessage("Search open requests");
    else if (localInput && localInput.view === 'close')
        data.filterMsg = gs.getMessage("Search closed requests");

    data.is_new_order = (($sp.getParameter("is_new_order") + '') === "true");
    data.requestSubmitMsg = gs.getMessage('Thank You. Your request has been submitted');
    var draftItemsObj = getDraftItems(100);
    data.draftItems = draftItemsObj.items;
    data.hasMoreDrafts = draftItemsObj.hasMore;

    function getDraftItems(limit) {
        var userID = gs.getUser().getID();
        var cart = new SPCart("draft_items", userID);

        if (!gs.nil(cart) && typeof cart.getItemsWithPagination === "function")
            itemsObj = cart.getItemsWithPagination('sys_updated_on', limit);
        else {
            gs.info("Drafts tab is hidden as we are either unable to fetch the draft cart or the SPCart script include is customized.");
            data.hide_draft_tab = true;
            itemsObj = {};
        }

        return itemsObj;
    }

    function getField(gr, name) {
        var f = {};
        var id = gr.getUniqueValue();
        gr = new GlideRecord(gr.getRecordClassName());
        gr.get(id);
        f.display_value = gr.getDisplayValue(name);
        f.value = gr.getValue(name);
        var ge = gr.getElement(name);
        if (ge) {
            var ed = ge.getED();
            if (ed)
                f.type = ed.getInternalType();
            f.label = ge.getLabel();
        }
        return f;
    }

    function getMyRequestSysIds() {
        var ids = {};
        var rq_filter = new GlideRecord('request_filter');
        rq_filter.addActiveQuery();
        if (rq_filter.isValidField('applies_to'))
            rq_filter.addQuery('applies_to', 1).addOrCondition('applies_to', 10);
        rq_filter.query();
        while (rq_filter.next()) {
            var tableName = rq_filter.table_name;
            if (rq_filter.isValidField('table'))
                tableName = rq_filter.table;
            var gr = new GlideRecord(tableName);
            if (!gr.isValid())
                continue;

            gr.addQuery(rq_filter.filter);
            gr.query();
            if (tableName == 'sc_request')
                alsoRequest = true;
            while (gr.next()) {
                var portalSettings = {};
                portalSettings.page = rq_filter.portal_page.nil() ? '' : rq_filter.portal_page.getDisplayValue() + '';
                portalSettings.primary_display = rq_filter.primary_display.nil() ? '' : rq_filter.primary_display + '';
                portalSettings.secondary_displays = rq_filter.secondary_display.nil() ? '' : rq_filter.secondary_display + '';
                ids[gr.sys_id + ''] = portalSettings;
            }
        }
        return ids;
    }

    // retrieve the request's
    var myRequestMap = getMyRequestSysIds();
    var taskIDs = Object.keys(myRequestMap);

    var gr = new GlideRecordSecure('task');

    if (!data.is_associated_ticket_tab) {
        if (localInput && localInput.view === 'open')
            gr.addActiveQuery();
        else if (localInput && localInput.view === 'close')
            gr.addQuery('active', 0);
        else
            gr.addActiveQuery();
    } else {
        if (recordTable != 'universal_request') {
            //Check if universal_request field is present and it is a universal request
            var taskRecord = new GlideRecordSecure('task');
            taskRecord.get(recordId);
            if (taskRecord.isValid() && !taskRecord.universal_request.nil()) {
                var qc = gr.addQuery('parent', taskRecord.universal_request);
                qc.addOrCondition('parent', 'IN', new sn_uni_req.UniversalRequestUtilsSNC().getChildRequests(taskRecord.universal_request));
            } else
                gr.addQuery('parent', recordId);
        } else {
            var qc = gr.addQuery('parent', recordId);
            qc.addOrCondition('parent', 'IN', new sn_uni_req.UniversalRequestUtilsSNC().getChildRequests(recordId));
        }
    }

    gr.orderByDesc('sys_updated_on');
    if (localInput && localInput.search_text) {
        var req = [];
        var task = new GlideRecordSecure('task');
        task.addQuery('123TEXTQUERY321', localInput.search_text);
        if (localInput && localInput.view === 'open')
            task.addQuery('active', 1);
        else if (localInput && localInput.view === 'close')
            task.addQuery('active', 0);
        else
            task.addQuery('active', 1);
        task.addQuery('sys_id', taskIDs);
        task.query();

        while (task.next())
            req.push(task.getUniqueValue());

        var ritmGR = new GlideRecord('sc_req_item');
        if (alsoRequest && ritmGR.isValid()) {
            if (localInput && localInput.view === 'open')
                ritmGR.addQuery('request.active', 1);
            else if (localInput && localInput.view === 'close')
                ritmGR.addQuery('request.active', 0);
            else
                ritmGR.addQuery('request.active', 1);
            ritmGR.addQuery('123TEXTQUERY321', localInput.search_text);
            ritmGR.addQuery('request.sys_id', taskIDs);
            ritmGR.query();
            while (ritmGR.next())
                req.push(ritmGR.getValue('request'));
        }
        gr.addQuery('sys_id', req);
    } else
        gr.addQuery('sys_id', taskIDs);
    gr.query();

    data.request = {};

    data.request.req_list = [];
    var recordIdx = 0;
    var limit = options.items_per_page ? options.items_per_page : 15;
    if (localInput && localInput.action == 'fetch_more')
        data.lastLimit = localInput.lastLimit + limit;
    else
        data.lastLimit = limit;

    data.hasMore = false;
    while (recordIdx != data.lastLimit && gr.next()) {
        var portalSettings = myRequestMap[gr.getUniqueValue()];
        if (typeof portalSettings == 'undefined')
            portalSettings = {};

        var record = {};
        record.sys_id = gr.getValue('sys_id');

        if (gr.getRecordClassName() == 'sc_request') {
            var ritm = new GlideRecord("sc_req_item");
            if (!ritm.isValid())
                continue;

            ritm.addQuery("request", gr.getUniqueValue());
            ritm.query();
            if (ritm.getRowCount() == 0)
                continue;
            if (ritm.getRowCount() > 1)
                record.display_field = gs.getMessage("{0} requested items", ritm.getRowCount());
            else {
                ritm.next();
                record.display_field = ritm.cat_item.getDisplayValue() || ritm.getDisplayValue("short_description");
            }
            record.url = {
                id: portalSettings.page ? portalSettings.page : 'sc_request',
                table: 'sc_request',
                sys_id: record.sys_id
            };
        } else {
            record.display_field = portalSettings.primary_display ? getField(gr, portalSettings.primary_display).display_value : getField(gr, 'number').display_value;
            record.url = {
                id: portalSettings.page ? portalSettings.page : 'ticket',
                table: gr.getRecordClassName(),
                sys_id: record.sys_id
            };
        }
        record.display_number = getField(gr, 'number').display_value || '';
        if (portalSettings.secondary_displays) {
            record.secondary_displays = [];
            portalSettings.secondary_displays.split(",").forEach(function(sDisplay) {
                record.secondary_displays.push(getField(gr, sDisplay));
            });
        } else
            record.secondary_displays = getField(gr, 'short_description');

        record.updated_on = gr.getValue('sys_updated_on');
        record.state = gr.getDisplayValue('state');
        if ((recordIdx !== 0) && (data.lastLimit - limit === recordIdx))
            record.highlight = true;

        data.request.req_list.push(record);
        recordIdx++;
    }

    if (gr.next())
        data.hasMore = true;

})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-04-02 05:50:51</sys_created_on>
        <sys_id>847bce57c3e066109518b11ed4013198</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Copy of My Requests</sys_name>
        <sys_package display_value="New Employee Access Request" source="x_1636309_employ_0">c686c320c30422109518b11ed40131d0</sys_package>
        <sys_policy/>
        <sys_scope display_value="New Employee Access Request">c686c320c30422109518b11ed40131d0</sys_scope>
        <sys_update_name>sp_widget_847bce57c3e066109518b11ed4013198</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-04-02 05:50:51</sys_updated_on>
        <template><![CDATA[<div class="panel panel-default b" ng-init="c.trackPage()">
 <div class="panel-heading" ng-show="::!data.is_associated_ticket_tab">
    <h2 class="panel-title">{{::data.messages.myRequestsTitle}}</h2>
  </div> 	
  
  <uib-tabset role="tablist" ng-hide="::c.data.hide_draft_tab">
    <uib-tab role="tab" active="c.data.isRequestsTabActive" select="c.changeSelectedTab('requests')" index="requests" class="uib-vis-tab" heading="${Submitted requests}">
        <div ng-include="'myRequests'"></div>
    </uib-tab>
    <uib-tab role="tab" active="c.data.isDraftsTabActive" select="c.changeSelectedTab('drafts')" index="drafts" class="uib-vis-tab" heading="${Drafts}">
        <div ng-include="'draftItemsTemplate'"></div>
    </uib-tab>
  </uib-tabset>

<div ng-include="'myRequests'" ng-show="::c.data.hide_draft_tab"></div>

<script type="text/ng-template" id="draftItemsTemplate">
  <div class="panels-container list-group">
   <div ng-show="::c.data.draftItems.length > 0" class="list-group-item row requests-header-container">
          <div class="col-md-4 col-xs-12 padding-left-large fit-content">
            <div class="input-group" style="width:100%">
              <input ng-model="c.data.draftSearchText" ng-change="c.updateFilteredDraftItems()" class="form-control" style="width:100%" placeholder="{{c.data.draftFilterMsg}}" aria-label="{{c.data.draftFilterMsg}}">
              <span class="input-group-btn">
                <button class="btn btn-default align-icon" type="button" data-original-title="{{c.data.draftFilterMsg }}" aria-label="{{c.data.draftFilterMsg }}" data-toggle="tooltip" data-placement="bottom">
                	<i class="fa fa-search"></i>
                </button>
              </span>
            </div><!-- /input-group -->
          </div>
    	</div>
      <div ng-if="c.data.draftItems.length > 0 && (!c.filteredDraftItems || c.filteredDraftItems.length == 0)" class="panel-body panels-container">
        ${Search didn't match any draft items} 
      </div> 
  
   <div ng-if="c.data.draftItems.length == 0" class="panel-body panels-container">
        ${You do not have any draft items} 
   </div>
      <div role="table" ng-if="(c.filteredDraftItems && c.filteredDraftItems.length > 0)" class="table" aria-label="{{::c.data.draftItemsMsg}}">
      <div role="rowgroup" class="column-headers">
        <div role="row" class="list-group-item table-responsive">
          <span role="columnheader" class="col-xs-4 padder-r-none padder-l-none">${Draft name}</span>
          <span role="columnheader" class="col-xs-4 padder-md">${Item name}</span>
          <span role="columnheader" class="col-xs-2 padder-r-none padder-l-none">${updated_capital}</span>
           <span role="columnheader" class="col-xs-1 padder-r-none padder-l-none"></span>
        </div>
   	  </div>
      <ul role="rowgroup" class="padder-l-none padder-r-none">
        <li role="row" ng-repeat="item in c.filteredDraftItems" class="list-group-item draft-item-row table-responsive" style="margin:0px" >
          <div role="cell" class="draft-item-cell col-xs-4 padder-l-none padder-r-none main-column">
            <div class="primary-display text-wrap">
              <a href="?id={{'sc_cat_item'}}&{{'edit=draft'}}&sys_id={{::item.sys_id}}" aria-label="{{::item.cart_item_name}}"> {{::item.cart_item_name}} </a>
            </div>
          </div>
          <div role="cell" class="draft-item-cell col-xs-4 padder-md">
            <div class="text-wrap">
              <span> {{::item.name}}</span>
            </div>
          </div>
          <div role="cell" class="draft-item-cell col-xs-2 padder-l-none padder-r-none updated-column">
            <div class="updated">
              <i class="fa fa-clock-o" aria-hidden="true" title="${Updated}"></i>
              <sn-time-ago timestamp="::item.sys_updated_on"/>
            </div>
          </div>
          <div  role="cell" class="draft-item-cell col-xs-1 padder-l-none padder-r-none">
            <div class="btn-group btn-group-sm">
              <button type="button" class="btn btn-clear" ng-click="c.removeDraftItem(item)" data-toggle="tooltip" data-placement="top"  data-container="body" title="${Remove Draft Item}">
              	<i class=" icon-trash btn-remove" aria-hidden="true"></i>
              </button>
            </div>
          </td>
        </li>
        
      </ul>
       </div>
       </div>
       <div class="col-sm-12 pull-none" ng-if="c.data.hasMoreDrafts" style="padding-bottom:15px">
          <div class="text-a-c" ng-if="c.fetchingDrafts">
			  <i class="fa fa-spinner fa-pulse fa-2x fa-fw"></i>
			  <span class="sr-only">${Loading more draft items}</span>
          </div>
          <button class="btn btn-default btn-show-more" ng-click="c.loadMoreDrafts()">${Show more drafts}</button>
      </div>
</script>

<script type="text/ng-template" id="myRequests">
    <div class="panels-container list-group">
			<div ng-show="::!data.is_associated_ticket_tab" class="list-group-item row requests-header-container">
          <div class="col-md-3 col-xs-12 m-b-sm fit-content">
            <div class="form-inline control-view" ng-if="c.options.show_view == 'true'">
            	<label class="control-label hidden-xs wrapper-xs " id="label_view" for="view">${View}</label>
              <select ng-model="c.viewFilter" id="view" class="form-control adjust-width" ng-change="c.changeView()" style="width:80%"
                      ng-options="item.key as item.value for item in c.filterOptions">
              </select>
            </div>
          </div>
          <div class="col-md-4 col-xs-12 padding-left-large fit-content">
            <div class="input-group" style="width:100%">
              <input ng-model="c.filterText" ng-keypress="c.checkEnter($event)"class="form-control" style="width:100%" placeholder="{{data.filterMsg}}" aria-label="{{data.filterMsg}}">
              <span class="input-group-btn">
                <button class="btn btn-default align-icon" type="button" ng-click="c.search()" data-original-title="{{data.filterMsg}}" aria-label="{{data.filterMsg}}" data-toggle="tooltip" data-placement="bottom">
                	<i class="fa fa-search"></i>
                </button>
              </span>
            </div><!-- /input-group -->
              
          </div>
    	</div>
 
    	<div ng-if="c.data.request.req_list.length == 0 && !c.filterText" class="panel-body panels-container">
        ${You do not have any requests} 
      </div>
    	<div ng-if="c.data.request.req_list.length == 0 && c.filterText" class="panel-body panels-container">
        ${Search didn't match any requests} 
      </div>
      <div role="table" ng-if="c.data.request.req_list.length > 0" class="table" aria-label="{{::data.messages.myRequestsTitle}}">
      <div ng-show="::!data.is_associated_ticket_tab" role="rowgroup" class="column-headers">
        <div role="row" class="list-group-item table-responsive">
          <span role="columnheader" class="col-xs-6 padder-r-none padder-l-none">${Request}</span>
          <span role="columnheader" class="col-xs-3 padder-r-none padder-l-none">${State}</span>
          <span role="columnheader" class="col-xs-3 padder-r-none padder-l-none">${updated_capital}</span>
        </div>
   	  </div>
      <ul role="rowgroup" class="padder-l-none padder-r-none">
        <li role="row" class="list-group-item table-responsive" ng-repeat="item in c.data.request.req_list | limitTo: c.data.lastLimit track by item.sys_id" style="margin:0px" >
          <div role="cell" class="col-xs-6 padder-l-none padder-r-none main-column">
            <div class="primary-display">
              <a href="?id={{::item.url.id}}&table={{::item.url.table}}&sys_id={{::item.url.sys_id}}" sn-focus="{{::item.highlight}}" aria-label="{{::item.display_field}} , {{::item.display_number}}"> {{::item.display_field}} </a>
            </div>
            <small class="text-muted">
              <div ng-repeat="f in item.secondary_displays" class="secondary-display">
                <span >{{::f.display_value}}</span>
              </div>
            </small>
          </div>
          <div role="cell" class="col-xs-3 padder-l-none padder-r-none state-column">
            <div class="state">
              <span> {{::item.state}}</span>
            </div>
          </div>
          <div role="cell" class="col-xs-3 padder-l-none padder-r-none updated-column">
            <div class="updated">
              <i class="fa fa-clock-o" aria-hidden="true" title="${Updated}"></i>
              <sn-time-ago timestamp="::item.updated_on"/>
            </div>
          </div>
        </li>
      </ul>
    </div>

      <div class="col-sm-12 pull-none" ng-if="c.data.hasMore" style="padding-bottom:15px">
					<div class="text-a-c" ng-if="c.fetching">
          	<i class="fa fa-spinner fa-pulse fa-2x fa-fw"></i>
						<span class="sr-only">${Loading more requests}</span>  
  	      </div>
          <button class="btn btn-default btn-show-more" ng-click="c.loadMore()"> {{::data.messages.showMoreRequests}} </button>  
      </div>
    
</script>]]></template>
    </sp_widget>
    <sys_update_version action="INSERT_OR_UPDATE">
        <action>DELETE</action>
        <application display_value="New Employee Access Request">c686c320c30422109518b11ed40131d0</application>
        <file_path/>
        <instance_id>e54985e22b53d614323ef9f66e91bfbd</instance_id>
        <instance_name>dev293354</instance_name>
        <name>sp_widget_847bce57c3e066109518b11ed4013198</name>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sp_widget"&gt;&lt;sp_widget action="INSERT_OR_UPDATE"&gt;&lt;category&gt;sc&lt;/category&gt;&lt;client_script&gt;&lt;![CDATA[function($scope, spAriaUtil, i18n, spModal) {

    var c = this;

    c.trackPage = function() {
        window.GlideWebAnalytics.trackEvent("Service Catalog", "Catalog My Requests", "My Requests Widget Loaded");
    }

    if (c.data.is_new_order)
        spAriaUtil.sendLiveMessage(c.data.requestSubmitMsg);

    c.viewFilter = 'open';
    c.filterOptions = [{key:'open',value:c.data.messages.openRequests},{key:'close',value:c.data.messages.closedRequests}];

    c.changeView = function() {
        window.GlideWebAnalytics.trackEvent("Service Catalog", "Catalog My Requests", "Open/Close Filter Toggled");
        c.server.get({
            action: "change_view",
            view: c.viewFilter,
            search_text: c.filterText
        }).then(function(response) {
            c.data = response.data;
            var resultMsg = (c.data.request.req_list.length == 1 ? 'result' : 'results') + ' returned';
            spAriaUtil.sendLiveMessage(i18n.getMessage('{0} ' + resultMsg).withValues([c.data.request.req_list.length]));
        });
    }

    c.search = function() {
        c.server.get({
            action: 'search',
            search_text: c.filterText,
            view: c.viewFilter
        }).then(function(response) {
            c.data = response.data;
            var resultMsg = (c.data.request.req_list.length == 1 ? 'result' : 'results') + ' returned';
            spAriaUtil.sendLiveMessage(i18n.getMessage('{0} ' + resultMsg).withValues([c.data.request.req_list.length]));
        });
    }

    c.checkEnter = function(event) {
        if (event.which === 13)
            c.search();
    }


    c.filterDraftItem = function(item) {
        if (!c.data.draftSearchText)
            return true; // If no searchText, return true to show all items

        var searchText = c.data.draftSearchText.toLowerCase();

        // Perform the filtering based on item.name or item.displayName
        return (
            (item.name &amp;&amp; item.name.toLowerCase().includes(searchText)) ||
            (item.cart_item_name &amp;&amp; item.cart_item_name.toLowerCase().includes(searchText))
        );
    };

    c.updateFilteredDraftItems = function() {
        if (!c.data.draftItems)
            return;

        if (!c.data.draftSearchText)
            c.filteredDraftItems = c.data.draftItems;
        else {
            c.filteredDraftItems = c.data.draftItems.filter(function(item) {
                return c.filterDraftItem(item)
            });
        }
    }

    c.filteredDraftItems = [];
    c.updateFilteredDraftItems();

    c.removeDraftItem = function(cartItem) {
        var options = {
            title: c.data.deleteDraftItemMsg,
            headerStyle: {
                border: 'none',
                'padding-bottom': 0
            },
            footerStyle: {
                border: 'none',
                'padding-top': 0
            },
            messageOnly: true,
            buttons: [{
                label: c.data.dialogCancel,
                primary: false
            }, {
                label: c.data.dialogDelete,
                'class': 'btn-danger',
                primary: true
            }],
        };

        spModal.open(options).then(function(actionButton) {
            if (actionButton) {
                if (!actionButton.primary)
                    return;

                c.fetchingDrafts = true;
                c.server.get({
                    action: "remove_item",
                    removeItemID: cartItem.sys_id,
                    prevLimit : c.data.draftItems &amp;&amp; c.data.draftItems.length ? c.data.draftItems.length : 100,
                    attachmentTable: cartItem.attachment_table
                }).then(function(response) {
                    c.data.draftItems = response.data.draftItems;
                    c.data.hasMoreDrafts = response.data.hasMoreDrafts;
                    c.updateFilteredDraftItems();
                    c.fetchingDrafts = false;
                });
            }
        });
    }

    c.loadMore = function() {
        window.GlideWebAnalytics.trackEvent("Service Catalog", "Catalog My Requests", "Show More Clicked");
        var currentRequests = c.data.request.req_list.length;
        spAriaUtil.sendLiveMessage("${Loading more requests}");
        c.fetching = true;
        c.server.get({
            action: 'fetch_more',
            lastLimit: c.data.lastLimit,
            view: c.viewFilter,
            search_text: c.filterText
        }).then(function(response) {
            var addedRequests = response.data.request.req_list.length - currentRequests;
            var resultMsg = (addedRequests == 1 ? 'request' : 'requests') + ' added';
            spAriaUtil.sendLiveMessage(i18n.getMessage('{0} ' + resultMsg).withValues([addedRequests]));
            c.data = response.data;
            c.fetching = false;
        });
    }

    c.loadMoreDrafts = function() {
            c.fetchingDrafts = true;

            c.server.get({
                action : 'fetch_more_draft_items',
                prevLimit: c.data.draftItems &amp;&amp; c.data.draftItems.length ? c.data.draftItems.length : 100,
            }).then(function(response){
                c.data.draftItems = response.data.draftItems;
                c.data.hasMoreDrafts = response.data.hasMoreDrafts;
                c.updateFilteredDraftItems();
                c.fetchingDrafts = false;
        });
    }

    c.changeSelectedTab = function(selectedTab) {
        c.data.isRequestsTabActive = selectedTab == "requests";
        c.data.isDraftsTabActive = selectedTab == "drafts";
    }
}]]&gt;&lt;/client_script&gt;&lt;controller_as&gt;c&lt;/controller_as&gt;&lt;css&gt;$sp-space--sm: 8px !default;
.panel-heading {
  position: relative;
  &amp;gt; .fa-filter { 
    position: absolute;
    top: 1rem; 
    right: 1rem; 
  }
}
.draft-item-row {
  display: flex;
}

.draft-item-cell {
  display: flex;
  align-items: center;
}

.nav-tabs &amp;gt; li &amp;gt; a:focus,
.nav-tabs &amp;gt; li.active &amp;gt; a:hover,
.nav-tabs &amp;gt; li.active &amp;gt; a,
.nav-tabs &amp;gt; li.active &amp;gt; a:focus,
.nav-tabs &amp;gt; li.active &amp;gt; a:hover
{
  border-bottom: 3px solid $primary; /* Show border only at the bottom for the active tab */
 	color: $primary;
  font-weight: bold;
  border-top: none;
  border-left: none;
  border-right: none;
  box-shadow: none;
}

.nav-tabs {
  border-bottom: 1px solid $nav-tabs-justified-link-border-color; /* Show the bottom border for all tabs */
  border-radius: 3px 3px 0 0;
}

.panel {
  &amp;gt; .list-group, &amp;gt;.panel-collapse{
    	.list-group-item {
		  	border-width: 1px 0 0 0;
      }
  }
  .requests-header-container {
    margin: 0px;
    border: none;
    display: flex;
    flex-wrap: wrap;
    justify-content: flex-end;
    min-width: min-content;
    
    .fit-content {
      min-width: fit-content;
    }
  }
}

.uib-vis-tab &amp;gt; a {
  color: $gray-dark;
}

.btn-show-more {
  margin-left: auto;
  margin-right: auto;
  display: flex;
}

.control-view {
  display: flex;
  align-items: baseline;
}

@media  (min-width: 768px) and (max-width: 991px) {
	.padding-left-large {
		padding-left: 45px !important;
	}
}

@media  (max-width: 991px) {
  .adjust-width {
	width: 100% !important;
  }
  .align-icon {
	padding: 6px $sp-space--sm;
  }
}

.column-headers {
  position: sticky;
  position: -webkit-sticky;
  top: 0;
  z-index: 1;
  box-shadow: 0px 1px 0px $panel-inner-border;
  font-weight: 700;
}

&lt;/css&gt;&lt;data_table&gt;sp_instance&lt;/data_table&gt;&lt;demo_data/&gt;&lt;description/&gt;&lt;docs/&gt;&lt;field_list/&gt;&lt;has_preview&gt;false&lt;/has_preview&gt;&lt;id/&gt;&lt;internal&gt;false&lt;/internal&gt;&lt;link&gt;&lt;![CDATA[function link(scope, element, attrs, controller) {
    init = function() {
        var isOpen = false;
        scope.$evalAsync(function() {
            element.on("select2-open", function() {
                isOpen = true;
                element.parent().find(".select2-focusser").attr("aria-expanded", isOpen);
            });
            element.on("select2-close", function() {
                isOpen = false;
                element.parent().find(".select2-focusser").attr("aria-expanded", isOpen);
            });
        });

        setTimeout(function() {
            var select2Focusser = element.parent().find(".select2-focusser");
            var select2Results = element.parent().find("ul.select2-results");
            select2Focusser.attr("aria-expanded", isOpen);
            select2Focusser.attr("aria-owns", select2Results.attr("id"));
            select2Results.attr("aria-labelledby", "label_view");
        }, 500);
    }
    init();
}]]&gt;&lt;/link&gt;&lt;name&gt;Copy of My Requests&lt;/name&gt;&lt;option_schema&gt;[{"name":"title","section":"Presentation","default_value":"My Requests","label":"Title","type":"string"},{"name":"show_view","section":"Behavior","default_value":"true","label":"Show View","type":"boolean"},{"hint":"Number of items per page","name":"items_per_page","section":"Behavior","default_value":"15","label":"Items per page","type":"integer"}]&lt;/option_schema&gt;&lt;public&gt;false&lt;/public&gt;&lt;roles&gt;snc_internal,snc_external&lt;/roles&gt;&lt;script&gt;&lt;![CDATA[(function() {

    var localInput = input; //to safeguard pullution of "input" via BR or other scripts
    var itemsObj;
    if (localInput &amp;&amp; localInput.action === "remove_item") {
        var cartRecord = new sn_sc.CartJS('draft_items');
        cartRecord.remove(localInput.removeItemID);
        itemsObj = getDraftItems(localInput.prevLimit);
        data.draftItems = itemsObj.items;
        data.hasMoreDrafts = itemsObj.hasMore;
        if (!gs.nil(localInput.attachmentTable))
          new global.GlobalServiceCatalogUtil().deleteAttachments(localInput.attachmentTable, localInput.removeItemID);

        return;
    }

    if (localInput &amp;&amp; localInput.action == "fetch_more_draft_items") {
        itemsObj = getDraftItems(localInput.prevLimit + 100);
        data.draftItems = itemsObj.items;
        data.hasMoreDrafts = itemsObj.hasMore;
        return;
    }

    var alsoRequest = false;

    var msg = data.messages = {};
    msg.myRequestsTitle = options.title ? gs.getMessage(options.title) : gs.getMessage('My Requests');
    msg.openRequests = gs.getMessage('Open requests');
    msg.closedRequests = gs.getMessage('Closed requests');
    msg.showMoreRequests = gs.getMessage('Show More Requests');
    data.filterMsg = gs.getMessage("Search open requests");
    data.draftFilterMsg = gs.getMessage("Search draft items");
    data.draftItemsMsg = gs.getMessage("Draft Items");
    data.deleteDraftItemMsg = gs.getMessage("Are you sure you want to delete the draft item?");
    data.dialogCancel = gs.getMessage('Cancel');
    data.dialogDelete = gs.getMessage('Delete draft');
    data.draftSearchText = $sp.getParameter("draftSearchText");
    var selectDraftTab = $sp.getParameter('selectDraftTab');
    //localInput will be undefined only on the first load.
    if (gs.nil(localInput)) {
        data.isRequestsTabActive = !data.draftSearchText &amp;&amp; !selectDraftTab;
        data.isDraftsTabActive = !!data.draftSearchText || selectDraftTab;
    } else {
        data.isRequestsTabActive = true;
        data.isDraftsTabActive = false;
    }
    if (gs.nil(data.draftSearchText))
        data.draftSearchText = "";
    else
        data.draftSearchText = decodeURIComponent(data.draftSearchText);

    data.hide_draft_tab = (gs.getProperty('glide.sc.disable.save_as_draft') == 'true') || (gs.getProperty('glide.sc.enable.save_as_draft.portal.' + $sp.getPortalRecord().getValue("url_suffix")) != 'true');

    var recordTable = options.record_table || $sp.getParameter("table");
    var recordId = options.record_id || $sp.getParameter("sys_id");

    data.is_associated_ticket_tab = options.is_associated_ticket_tab;

    if (localInput &amp;&amp; localInput.view === 'open')
        data.filterMsg = gs.getMessage("Search open requests");
    else if (localInput &amp;&amp; localInput.view === 'close')
        data.filterMsg = gs.getMessage("Search closed requests");

    data.is_new_order = (($sp.getParameter("is_new_order") + '') === "true");
    data.requestSubmitMsg = gs.getMessage('Thank You. Your request has been submitted');
    var draftItemsObj = getDraftItems(100);
    data.draftItems = draftItemsObj.items;
    data.hasMoreDrafts = draftItemsObj.hasMore;

    function getDraftItems(limit) {
        var userID = gs.getUser().getID();
        var cart = new SPCart("draft_items", userID);

        if (!gs.nil(cart) &amp;&amp; typeof cart.getItemsWithPagination === "function")
            itemsObj = cart.getItemsWithPagination('sys_updated_on', limit);
        else {
            gs.info("Drafts tab is hidden as we are either unable to fetch the draft cart or the SPCart script include is customized.");
            data.hide_draft_tab = true;
            itemsObj = {};
        }

        return itemsObj;
    }

    function getField(gr, name) {
        var f = {};
        var id = gr.getUniqueValue();
        gr = new GlideRecord(gr.getRecordClassName());
        gr.get(id);
        f.display_value = gr.getDisplayValue(name);
        f.value = gr.getValue(name);
        var ge = gr.getElement(name);
        if (ge) {
            var ed = ge.getED();
            if (ed)
                f.type = ed.getInternalType();
            f.label = ge.getLabel();
        }
        return f;
    }

    function getMyRequestSysIds() {
        var ids = {};
        var rq_filter = new GlideRecord('request_filter');
        rq_filter.addActiveQuery();
        if (rq_filter.isValidField('applies_to'))
            rq_filter.addQuery('applies_to', 1).addOrCondition('applies_to', 10);
        rq_filter.query();
        while (rq_filter.next()) {
            var tableName = rq_filter.table_name;
            if (rq_filter.isValidField('table'))
                tableName = rq_filter.table;
            var gr = new GlideRecord(tableName);
            if (!gr.isValid())
                continue;

            gr.addQuery(rq_filter.filter);
            gr.query();
            if (tableName == 'sc_request')
                alsoRequest = true;
            while (gr.next()) {
                var portalSettings = {};
                portalSettings.page = rq_filter.portal_page.nil() ? '' : rq_filter.portal_page.getDisplayValue() + '';
                portalSettings.primary_display = rq_filter.primary_display.nil() ? '' : rq_filter.primary_display + '';
                portalSettings.secondary_displays = rq_filter.secondary_display.nil() ? '' : rq_filter.secondary_display + '';
                ids[gr.sys_id + ''] = portalSettings;
            }
        }
        return ids;
    }

    // retrieve the request's
    var myRequestMap = getMyRequestSysIds();
    var taskIDs = Object.keys(myRequestMap);

    var gr = new GlideRecordSecure('task');

    if (!data.is_associated_ticket_tab) {
        if (localInput &amp;&amp; localInput.view === 'open')
            gr.addActiveQuery();
        else if (localInput &amp;&amp; localInput.view === 'close')
            gr.addQuery('active', 0);
        else
            gr.addActiveQuery();
    } else {
        if (recordTable != 'universal_request') {
            //Check if universal_request field is present and it is a universal request
            var taskRecord = new GlideRecordSecure('task');
            taskRecord.get(recordId);
            if (taskRecord.isValid() &amp;&amp; !taskRecord.universal_request.nil()) {
                var qc = gr.addQuery('parent', taskRecord.universal_request);
                qc.addOrCondition('parent', 'IN', new sn_uni_req.UniversalRequestUtilsSNC().getChildRequests(taskRecord.universal_request));
            } else
                gr.addQuery('parent', recordId);
        } else {
            var qc = gr.addQuery('parent', recordId);
            qc.addOrCondition('parent', 'IN', new sn_uni_req.UniversalRequestUtilsSNC().getChildRequests(recordId));
        }
    }

    gr.orderByDesc('sys_updated_on');
    if (localInput &amp;&amp; localInput.search_text) {
        var req = [];
        var task = new GlideRecordSecure('task');
        task.addQuery('123TEXTQUERY321', localInput.search_text);
        if (localInput &amp;&amp; localInput.view === 'open')
            task.addQuery('active', 1);
        else if (localInput &amp;&amp; localInput.view === 'close')
            task.addQuery('active', 0);
        else
            task.addQuery('active', 1);
        task.addQuery('sys_id', taskIDs);
        task.query();

        while (task.next())
            req.push(task.getUniqueValue());

        var ritmGR = new GlideRecord('sc_req_item');
        if (alsoRequest &amp;&amp; ritmGR.isValid()) {
            if (localInput &amp;&amp; localInput.view === 'open')
                ritmGR.addQuery('request.active', 1);
            else if (localInput &amp;&amp; localInput.view === 'close')
                ritmGR.addQuery('request.active', 0);
            else
                ritmGR.addQuery('request.active', 1);
            ritmGR.addQuery('123TEXTQUERY321', localInput.search_text);
            ritmGR.addQuery('request.sys_id', taskIDs);
            ritmGR.query();
            while (ritmGR.next())
                req.push(ritmGR.getValue('request'));
        }
        gr.addQuery('sys_id', req);
    } else
        gr.addQuery('sys_id', taskIDs);
    gr.query();

    data.request = {};

    data.request.req_list = [];
    var recordIdx = 0;
    var limit = options.items_per_page ? options.items_per_page : 15;
    if (localInput &amp;&amp; localInput.action == 'fetch_more')
        data.lastLimit = localInput.lastLimit + limit;
    else
        data.lastLimit = limit;

    data.hasMore = false;
    while (recordIdx != data.lastLimit &amp;&amp; gr.next()) {
        var portalSettings = myRequestMap[gr.getUniqueValue()];
        if (typeof portalSettings == 'undefined')
            portalSettings = {};

        var record = {};
        record.sys_id = gr.getValue('sys_id');

        if (gr.getRecordClassName() == 'sc_request') {
            var ritm = new GlideRecord("sc_req_item");
            if (!ritm.isValid())
                continue;

            ritm.addQuery("request", gr.getUniqueValue());
            ritm.query();
            if (ritm.getRowCount() == 0)
                continue;
            if (ritm.getRowCount() &gt; 1)
                record.display_field = gs.getMessage("{0} requested items", ritm.getRowCount());
            else {
                ritm.next();
                record.display_field = ritm.cat_item.getDisplayValue() || ritm.getDisplayValue("short_description");
            }
            record.url = {
                id: portalSettings.page ? portalSettings.page : 'sc_request',
                table: 'sc_request',
                sys_id: record.sys_id
            };
        } else {
            record.display_field = portalSettings.primary_display ? getField(gr, portalSettings.primary_display).display_value : getField(gr, 'number').display_value;
            record.url = {
                id: portalSettings.page ? portalSettings.page : 'ticket',
                table: gr.getRecordClassName(),
                sys_id: record.sys_id
            };
        }
        record.display_number = getField(gr, 'number').display_value || '';
        if (portalSettings.secondary_displays) {
            record.secondary_displays = [];
            portalSettings.secondary_displays.split(",").forEach(function(sDisplay) {
                record.secondary_displays.push(getField(gr, sDisplay));
            });
        } else
            record.secondary_displays = getField(gr, 'short_description');

        record.updated_on = gr.getValue('sys_updated_on');
        record.state = gr.getDisplayValue('state');
        if ((recordIdx !== 0) &amp;&amp; (data.lastLimit - limit === recordIdx))
            record.highlight = true;

        data.request.req_list.push(record);
        recordIdx++;
    }

    if (gr.next())
        data.hasMore = true;

})();]]&gt;&lt;/script&gt;&lt;servicenow&gt;false&lt;/servicenow&gt;&lt;sys_class_name&gt;sp_widget&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2025-04-02 05:50:51&lt;/sys_created_on&gt;&lt;sys_id&gt;847bce57c3e066109518b11ed4013198&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_name&gt;Copy of My Requests&lt;/sys_name&gt;&lt;sys_package display_value="New Employee Access Request" source="x_1636309_employ_0"&gt;c686c320c30422109518b11ed40131d0&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="New Employee Access Request"&gt;c686c320c30422109518b11ed40131d0&lt;/sys_scope&gt;&lt;sys_update_name&gt;sp_widget_847bce57c3e066109518b11ed4013198&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2025-04-02 05:50:51&lt;/sys_updated_on&gt;&lt;template&gt;&lt;![CDATA[&lt;div class="panel panel-default b" ng-init="c.trackPage()"&gt;
 &lt;div class="panel-heading" ng-show="::!data.is_associated_ticket_tab"&gt;
    &lt;h2 class="panel-title"&gt;{{::data.messages.myRequestsTitle}}&lt;/h2&gt;
  &lt;/div&gt; 	
  
  &lt;uib-tabset role="tablist" ng-hide="::c.data.hide_draft_tab"&gt;
    &lt;uib-tab role="tab" active="c.data.isRequestsTabActive" select="c.changeSelectedTab('requests')" index="requests" class="uib-vis-tab" heading="${Submitted requests}"&gt;
        &lt;div ng-include="'myRequests'"&gt;&lt;/div&gt;
    &lt;/uib-tab&gt;
    &lt;uib-tab role="tab" active="c.data.isDraftsTabActive" select="c.changeSelectedTab('drafts')" index="drafts" class="uib-vis-tab" heading="${Drafts}"&gt;
        &lt;div ng-include="'draftItemsTemplate'"&gt;&lt;/div&gt;
    &lt;/uib-tab&gt;
  &lt;/uib-tabset&gt;

&lt;div ng-include="'myRequests'" ng-show="::c.data.hide_draft_tab"&gt;&lt;/div&gt;

&lt;script type="text/ng-template" id="draftItemsTemplate"&gt;
  &lt;div class="panels-container list-group"&gt;
   &lt;div ng-show="::c.data.draftItems.length &gt; 0" class="list-group-item row requests-header-container"&gt;
          &lt;div class="col-md-4 col-xs-12 padding-left-large fit-content"&gt;
            &lt;div class="input-group" style="width:100%"&gt;
              &lt;input ng-model="c.data.draftSearchText" ng-change="c.updateFilteredDraftItems()" class="form-control" style="width:100%" placeholder="{{c.data.draftFilterMsg}}" aria-label="{{c.data.draftFilterMsg}}"&gt;
              &lt;span class="input-group-btn"&gt;
                &lt;button class="btn btn-default align-icon" type="button" data-original-title="{{c.data.draftFilterMsg }}" aria-label="{{c.data.draftFilterMsg }}" data-toggle="tooltip" data-placement="bottom"&gt;
                	&lt;i class="fa fa-search"&gt;&lt;/i&gt;
                &lt;/button&gt;
              &lt;/span&gt;
            &lt;/div&gt;&lt;!-- /input-group --&gt;
          &lt;/div&gt;
    	&lt;/div&gt;
      &lt;div ng-if="c.data.draftItems.length &gt; 0 &amp;&amp; (!c.filteredDraftItems || c.filteredDraftItems.length == 0)" class="panel-body panels-container"&gt;
        ${Search didn't match any draft items} 
      &lt;/div&gt; 
  
   &lt;div ng-if="c.data.draftItems.length == 0" class="panel-body panels-container"&gt;
        ${You do not have any draft items} 
   &lt;/div&gt;
      &lt;div role="table" ng-if="(c.filteredDraftItems &amp;&amp; c.filteredDraftItems.length &gt; 0)" class="table" aria-label="{{::c.data.draftItemsMsg}}"&gt;
      &lt;div role="rowgroup" class="column-headers"&gt;
        &lt;div role="row" class="list-group-item table-responsive"&gt;
          &lt;span role="columnheader" class="col-xs-4 padder-r-none padder-l-none"&gt;${Draft name}&lt;/span&gt;
          &lt;span role="columnheader" class="col-xs-4 padder-md"&gt;${Item name}&lt;/span&gt;
          &lt;span role="columnheader" class="col-xs-2 padder-r-none padder-l-none"&gt;${updated_capital}&lt;/span&gt;
           &lt;span role="columnheader" class="col-xs-1 padder-r-none padder-l-none"&gt;&lt;/span&gt;
        &lt;/div&gt;
   	  &lt;/div&gt;
      &lt;ul role="rowgroup" class="padder-l-none padder-r-none"&gt;
        &lt;li role="row" ng-repeat="item in c.filteredDraftItems" class="list-group-item draft-item-row table-responsive" style="margin:0px" &gt;
          &lt;div role="cell" class="draft-item-cell col-xs-4 padder-l-none padder-r-none main-column"&gt;
            &lt;div class="primary-display text-wrap"&gt;
              &lt;a href="?id={{'sc_cat_item'}}&amp;{{'edit=draft'}}&amp;sys_id={{::item.sys_id}}" aria-label="{{::item.cart_item_name}}"&gt; {{::item.cart_item_name}} &lt;/a&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div role="cell" class="draft-item-cell col-xs-4 padder-md"&gt;
            &lt;div class="text-wrap"&gt;
              &lt;span&gt; {{::item.name}}&lt;/span&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div role="cell" class="draft-item-cell col-xs-2 padder-l-none padder-r-none updated-column"&gt;
            &lt;div class="updated"&gt;
              &lt;i class="fa fa-clock-o" aria-hidden="true" title="${Updated}"&gt;&lt;/i&gt;
              &lt;sn-time-ago timestamp="::item.sys_updated_on"/&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div  role="cell" class="draft-item-cell col-xs-1 padder-l-none padder-r-none"&gt;
            &lt;div class="btn-group btn-group-sm"&gt;
              &lt;button type="button" class="btn btn-clear" ng-click="c.removeDraftItem(item)" data-toggle="tooltip" data-placement="top"  data-container="body" title="${Remove Draft Item}"&gt;
              	&lt;i class=" icon-trash btn-remove" aria-hidden="true"&gt;&lt;/i&gt;
              &lt;/button&gt;
            &lt;/div&gt;
          &lt;/td&gt;
        &lt;/li&gt;
        
      &lt;/ul&gt;
       &lt;/div&gt;
       &lt;/div&gt;
       &lt;div class="col-sm-12 pull-none" ng-if="c.data.hasMoreDrafts" style="padding-bottom:15px"&gt;
          &lt;div class="text-a-c" ng-if="c.fetchingDrafts"&gt;
			  &lt;i class="fa fa-spinner fa-pulse fa-2x fa-fw"&gt;&lt;/i&gt;
			  &lt;span class="sr-only"&gt;${Loading more draft items}&lt;/span&gt;
          &lt;/div&gt;
          &lt;button class="btn btn-default btn-show-more" ng-click="c.loadMoreDrafts()"&gt;${Show more drafts}&lt;/button&gt;
      &lt;/div&gt;
&lt;/script&gt;

&lt;script type="text/ng-template" id="myRequests"&gt;
    &lt;div class="panels-container list-group"&gt;
			&lt;div ng-show="::!data.is_associated_ticket_tab" class="list-group-item row requests-header-container"&gt;
          &lt;div class="col-md-3 col-xs-12 m-b-sm fit-content"&gt;
            &lt;div class="form-inline control-view" ng-if="c.options.show_view == 'true'"&gt;
            	&lt;label class="control-label hidden-xs wrapper-xs " id="label_view" for="view"&gt;${View}&lt;/label&gt;
              &lt;select ng-model="c.viewFilter" id="view" class="form-control adjust-width" ng-change="c.changeView()" style="width:80%"
                      ng-options="item.key as item.value for item in c.filterOptions"&gt;
              &lt;/select&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="col-md-4 col-xs-12 padding-left-large fit-content"&gt;
            &lt;div class="input-group" style="width:100%"&gt;
              &lt;input ng-model="c.filterText" ng-keypress="c.checkEnter($event)"class="form-control" style="width:100%" placeholder="{{data.filterMsg}}" aria-label="{{data.filterMsg}}"&gt;
              &lt;span class="input-group-btn"&gt;
                &lt;button class="btn btn-default align-icon" type="button" ng-click="c.search()" data-original-title="{{data.filterMsg}}" aria-label="{{data.filterMsg}}" data-toggle="tooltip" data-placement="bottom"&gt;
                	&lt;i class="fa fa-search"&gt;&lt;/i&gt;
                &lt;/button&gt;
              &lt;/span&gt;
            &lt;/div&gt;&lt;!-- /input-group --&gt;
              
          &lt;/div&gt;
    	&lt;/div&gt;
 
    	&lt;div ng-if="c.data.request.req_list.length == 0 &amp;&amp; !c.filterText" class="panel-body panels-container"&gt;
        ${You do not have any requests} 
      &lt;/div&gt;
    	&lt;div ng-if="c.data.request.req_list.length == 0 &amp;&amp; c.filterText" class="panel-body panels-container"&gt;
        ${Search didn't match any requests} 
      &lt;/div&gt;
      &lt;div role="table" ng-if="c.data.request.req_list.length &gt; 0" class="table" aria-label="{{::data.messages.myRequestsTitle}}"&gt;
      &lt;div ng-show="::!data.is_associated_ticket_tab" role="rowgroup" class="column-headers"&gt;
        &lt;div role="row" class="list-group-item table-responsive"&gt;
          &lt;span role="columnheader" class="col-xs-6 padder-r-none padder-l-none"&gt;${Request}&lt;/span&gt;
          &lt;span role="columnheader" class="col-xs-3 padder-r-none padder-l-none"&gt;${State}&lt;/span&gt;
          &lt;span role="columnheader" class="col-xs-3 padder-r-none padder-l-none"&gt;${updated_capital}&lt;/span&gt;
        &lt;/div&gt;
   	  &lt;/div&gt;
      &lt;ul role="rowgroup" class="padder-l-none padder-r-none"&gt;
        &lt;li role="row" class="list-group-item table-responsive" ng-repeat="item in c.data.request.req_list | limitTo: c.data.lastLimit track by item.sys_id" style="margin:0px" &gt;
          &lt;div role="cell" class="col-xs-6 padder-l-none padder-r-none main-column"&gt;
            &lt;div class="primary-display"&gt;
              &lt;a href="?id={{::item.url.id}}&amp;table={{::item.url.table}}&amp;sys_id={{::item.url.sys_id}}" sn-focus="{{::item.highlight}}" aria-label="{{::item.display_field}} , {{::item.display_number}}"&gt; {{::item.display_field}} &lt;/a&gt;
            &lt;/div&gt;
            &lt;small class="text-muted"&gt;
              &lt;div ng-repeat="f in item.secondary_displays" class="secondary-display"&gt;
                &lt;span &gt;{{::f.display_value}}&lt;/span&gt;
              &lt;/div&gt;
            &lt;/small&gt;
          &lt;/div&gt;
          &lt;div role="cell" class="col-xs-3 padder-l-none padder-r-none state-column"&gt;
            &lt;div class="state"&gt;
              &lt;span&gt; {{::item.state}}&lt;/span&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div role="cell" class="col-xs-3 padder-l-none padder-r-none updated-column"&gt;
            &lt;div class="updated"&gt;
              &lt;i class="fa fa-clock-o" aria-hidden="true" title="${Updated}"&gt;&lt;/i&gt;
              &lt;sn-time-ago timestamp="::item.updated_on"/&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/li&gt;
      &lt;/ul&gt;
    &lt;/div&gt;

      &lt;div class="col-sm-12 pull-none" ng-if="c.data.hasMore" style="padding-bottom:15px"&gt;
					&lt;div class="text-a-c" ng-if="c.fetching"&gt;
          	&lt;i class="fa fa-spinner fa-pulse fa-2x fa-fw"&gt;&lt;/i&gt;
						&lt;span class="sr-only"&gt;${Loading more requests}&lt;/span&gt;  
  	      &lt;/div&gt;
          &lt;button class="btn btn-default btn-show-more" ng-click="c.loadMore()"&gt; {{::data.messages.showMoreRequests}} &lt;/button&gt;  
      &lt;/div&gt;
    
&lt;/script&gt;]]&gt;&lt;/template&gt;&lt;/sp_widget&gt;&lt;/record_update&gt;</payload>
        <payload_hash>-1550730978</payload_hash>
        <record_name>Copy of My Requests</record_name>
        <reverted_from/>
        <source>502c9a56c32022109518b11ed4013136</source>
        <source_table>sys_update_set</source_table>
        <state>previous</state>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-04-02 05:50:51</sys_created_on>
        <sys_id>047bce57c3e066109518b11ed401319b</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_recorded_at>195f50d699e0000001</sys_recorded_at>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-04-02 05:50:51</sys_updated_on>
        <type>Widget</type>
        <update_guid>087bce5799e0661015111f121503ca9a</update_guid>
        <update_guid_history>087bce5799e0661015111f121503ca9a:-1550730978</update_guid_history>
    </sys_update_version>
    <sys_metadata_delete action="INSERT_OR_UPDATE">
        <sys_audit_delete display_value="Copy of My Requests">c72d0e9bc3e066109518b11ed40131ba</sys_audit_delete>
        <sys_class_name>sys_metadata_delete</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-04-02 05:58:26</sys_created_on>
        <sys_db_object display_value="" name="sp_widget">sp_widget</sys_db_object>
        <sys_id>1391596d3c3d40a281bb9e59b9c342a4</sys_id>
        <sys_metadata>847bce57c3e066109518b11ed4013198</sys_metadata>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Copy of My Requests</sys_name>
        <sys_package display_value="New Employee Access Request" source="x_1636309_employ_0">c686c320c30422109518b11ed40131d0</sys_package>
        <sys_parent/>
        <sys_policy/>
        <sys_scope display_value="New Employee Access Request">c686c320c30422109518b11ed40131d0</sys_scope>
        <sys_scope_delete display_value="">35780f8897214290aa627c3dc29fb100</sys_scope_delete>
        <sys_update_name>sp_widget_847bce57c3e066109518b11ed4013198</sys_update_name>
        <sys_update_version display_value="sp_widget_847bce57c3e066109518b11ed4013198">047bce57c3e066109518b11ed401319b</sys_update_version>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-04-02 05:58:26</sys_updated_on>
    </sys_metadata_delete>
</record_update>
